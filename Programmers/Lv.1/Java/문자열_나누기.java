/*
Lv. 1 #140108 - 문자열 나누기

    문제 설명
        문자열 s가 입력되었을 때 다음 규칙을 따라서 이 문자열을 여러 문자열로 분해하려고 합니다.
            · 먼저 첫 글자를 읽습니다. 이 글자를 x라고 합시다.
            · 이제 이 문자열을 왼쪽에서 오른쪽으로 읽어나가면서, x와 x가 아닌 다른 글자들이 나온 횟수를 각각 셉니다. 처음으로 두 횟수가 같아지는 순간 멈추고, 지금까지 읽은 문자열을 분리합니다.
            · s에서 분리한 문자열을 빼고 남은 부분에 대해서 이 과정을 반복합니다. 남은 부분이 없다면 종료합니다.
            · 만약 두 횟수가 다른 상태에서 더 이상 읽을 글자가 없다면, 역시 지금까지 읽은 문자열을 분리하고, 종료합니다.

        문자열 s가 매개변수로 주어질 때, 위 과정과 같이 문자열들로 분해하고, 분해한 문자열의 개수를 return 하는 함수 solution을 완성하세요.


    제한사항
        · 1 ≤ s의 길이 ≤ 10,000
        · s는 영어 소문자로만 이루어져 있습니다.


    입출력 예
        s	                    result
        "banana"	            3
        "abracadabra"	        6
        "aaabbaccccabba"	    3


    입출력 예 설명
        입출력 예 #1
            s="banana"인 경우 ba - na - na와 같이 분해됩니다.

        입출력 예 #2
            s="abracadabra"인 경우 ab - ra - ca - da - br - a와 같이 분해됩니다.

        입출력 예 #3
            s="aaabbaccccabba"인 경우 aaabbacc - ccab - ba와 같이 분해됩니다.
*/


/*
    정확성  테스트
        테스트 1 〉	통과 (0.02ms, 74.8MB)
        테스트 2 〉	통과 (0.19ms, 84.3MB)
        테스트 3 〉	통과 (0.52ms, 65.1MB)
        테스트 4 〉	통과 (0.03ms, 75.2MB)
        테스트 5 〉	통과 (0.04ms, 78.6MB)
        테스트 6 〉	통과 (0.03ms, 71.3MB)
        테스트 7 〉	통과 (0.03ms, 71.1MB)
        테스트 8 〉	통과 (0.02ms, 68.9MB)
        테스트 9 〉	통과 (0.23ms, 65.9MB)
        테스트 10 〉	통과 (0.28ms, 71.6MB)
        테스트 11 〉	통과 (0.11ms, 73.5MB)
        테스트 12 〉	통과 (0.23ms, 81.9MB)
        테스트 13 〉	통과 (0.34ms, 80.8MB)
        테스트 14 〉	통과 (0.51ms, 71.4MB)
        테스트 15 〉	통과 (0.14ms, 73MB)
        테스트 16 〉	통과 (0.32ms, 71.8MB)
        테스트 17 〉	통과 (0.17ms, 74.1MB)
        테스트 18 〉	통과 (0.48ms, 70.7MB)
        테스트 19 〉	통과 (0.19ms, 74.5MB)
        테스트 20 〉	통과 (0.55ms, 81.4MB)
        테스트 21 〉	통과 (0.63ms, 79.4MB)
        테스트 22 〉	통과 (0.38ms, 78.6MB)
        테스트 23 〉	통과 (0.17ms, 75.4MB)
        테스트 24 〉	통과 (0.14ms, 77.3MB)
        테스트 25 〉	통과 (0.58ms, 69.7MB)
        테스트 26 〉	통과 (0.55ms, 76.4MB)
        테스트 27 〉	통과 (0.48ms, 72.2MB)
        테스트 28 〉	통과 (0.31ms, 77.4MB)
        테스트 29 〉	통과 (0.42ms, 68.3MB)
        테스트 30 〉	통과 (0.22ms, 72.2MB)
        테스트 31 〉	통과 (0.03ms, 76.1MB)
        테스트 32 〉	통과 (0.03ms, 79.2MB)
        테스트 33 〉	통과 (0.02ms, 71.7MB)
        테스트 34 〉	통과 (0.02ms, 72MB)
        테스트 35 〉	통과 (0.03ms, 66.5MB)
        테스트 36 〉	통과 (0.03ms, 72.5MB)
        테스트 37 〉	통과 (0.03ms, 79.3MB)
        테스트 38 〉	통과 (0.03ms, 79.9MB)
        테스트 39 〉	통과 (0.02ms, 69.2MB)
        테스트 40 〉	통과 (0.02ms, 77MB)
        테스트 41 〉	통과 (0.51ms, 69.5MB)
        테스트 42 〉	통과 (0.47ms, 74.2MB)

    채점 결과
        정확성: 100.0
        합계: 100.0 / 100.0
*/


// 정답

class Solution {
    public int solution(String s) {
        char x = ' '; // 분리한 문자열의 첫 글자
        int xNum = 0; // 분리한 문자열의 첫 글자 x의 개수
        int otherNum = 0; // 분리한 문자열의 x와 다른 문자열의 개수
        int answer = 0; // 분해한 문자열의 개수
        for (int i = 0, len = s.length(); i < len; i++) {
            char letter = s.charAt(i); // 문자열 s의 인덱스 i에 위치한 문자

            if (xNum == 0) { // 분리한 문자열의 첫 글자일 경우
                x = letter;
                xNum += 1;
            }
            else {
                if (x == letter) { // 현재 읽은 문자가 x일 경우
                    xNum += 1;
                }
                else { // 현재 읽은 문자가 x가 아닌 다른 글자일 경우
                    otherNum += 1;
                }

                if (xNum == otherNum) { // x와 x가 아닌 다른 글자들이 나온 횟수가 같을 경우
                    answer += 1;

                    x = ' ';
                    xNum = 0;
                    otherNum = 0;
                }
            }
        }

        if (x != ' ') { // 두 횟수가 다른 상태에서 더 이상 읽을 글자가 없을 경우
            answer += 1; // 지금까지 읽은 문자열 분리
        }

        return answer;
    }
}
