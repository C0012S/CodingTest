/*
Lv. 2 #12945 - 피보나치 수

    문제 설명
        피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.
        예를들어
            · F(2) = F(0) + F(1) = 0 + 1 = 1
            · F(3) = F(1) + F(2) = 1 + 1 = 2
            · F(4) = F(2) + F(3) = 1 + 2 = 3
            · F(5) = F(3) + F(4) = 2 + 3 = 5
        와 같이 이어집니다.

        2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.


    제한 사항
        · n은 2 이상 100,000 이하인 자연수입니다.


    입출력 예
        n	    return
        3	    2
        5	    5


    입출력 예 설명
        피보나치수는 0번째부터 0, 1, 1, 2, 3, 5, ... 와 같이 이어집니다.


    문제가 잘 안풀린다면😢
        힌트가 필요한가요? [코딩테스트 연습 힌트 모음집]으로 오세요! → 클릭
*/


/*
    정확성  테스트
        테스트 1 〉	통과 (0.02ms, 74MB)
        테스트 2 〉	통과 (0.03ms, 79.3MB)
        테스트 3 〉	통과 (0.02ms, 75.8MB)
        테스트 4 〉	통과 (0.01ms, 75.2MB)
        테스트 5 〉	통과 (0.02ms, 71.6MB)
        테스트 6 〉	통과 (0.01ms, 72MB)
        테스트 7 〉	통과 (0.09ms, 84.3MB)
        테스트 8 〉	통과 (0.05ms, 74.9MB)
        테스트 9 〉	통과 (0.03ms, 78.3MB)
        테스트 10 〉	통과 (0.11ms, 72.6MB)
        테스트 11 〉	통과 (0.06ms, 76MB)
        테스트 12 〉	통과 (0.04ms, 70.6MB)
        테스트 13 〉	통과 (2.55ms, 74.5MB)
        테스트 14 〉	통과 (3.76ms, 74.9MB)

    채점 결과
        정확성: 100.0
        합계: 100.0 / 100.0
*/


// 정답

class Solution {
    public int solution(int n) {
        int F[] = new int[n + 1]; // 피보나치 수를 저장하는 배열

        F[0] = 0;
        F[1] = 1;
        for (int f = 2; f <= n; f++) {
            F[f] = (F[f - 1] + F[f - 2]) % 1234567; // 자료형의 범위를 벗어나는 것을 방지하기 위해 나머지를 계산한 값을 저장한다.
        }

        return F[n];
    }
}