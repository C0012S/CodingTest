/*
Lv. 2 #43165 - 타겟 넘버

    문제 설명
        n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.
            -1+1+1+1+1 = 3
            +1-1+1+1+1 = 3
            +1+1-1+1+1 = 3
            +1+1+1-1+1 = 3
            +1+1+1+1-1 = 3

        사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.


    제한사항
        · 주어지는 숫자의 개수는 2개 이상 20개 이하입니다.
        · 각 숫자는 1 이상 50 이하인 자연수입니다.
        · 타겟 넘버는 1 이상 1000 이하인 자연수입니다.


    입출력 예
        numbers	            target	    return
        [1, 1, 1, 1, 1]	        3	        5
        [4, 1, 2, 1]	        4	        2


    입출력 예 설명
        입출력 예 #1
            문제 예시와 같습니다.

        입출력 예 #2
            +4+1-2+1 = 4
            +4-1+2-1 = 4

            · 총 2가지 방법이 있으므로, 2를 return 합니다.
*/


/*
    정확성  테스트
        테스트 1 〉	통과 (14.61ms, 35.4MB)
        테스트 2 〉	통과 (17.74ms, 35.4MB)
        테스트 3 〉	통과 (0.19ms, 33.3MB)
        테스트 4 〉	통과 (0.40ms, 33.4MB)
        테스트 5 〉	통과 (2.00ms, 35.4MB)
        테스트 6 〉	통과 (0.27ms, 33.5MB)
        테스트 7 〉	통과 (0.21ms, 33.4MB)
        테스트 8 〉	통과 (19.34ms, 36.5MB)

    채점 결과
        정확성: 100.0
        합계: 100.0 / 100.0
*/


// 정답

function solution(numbers, target) {
    var answer = 0;

    function find(sum, index) {
        if (index === numbers.length) {
            if (sum === target) {
                answer += 1;
            }

            return;
        }

        find(sum - numbers[index], index + 1);
        find(sum + numbers[index], index + 1);
    }

    find(0, 0);

    return answer;
}